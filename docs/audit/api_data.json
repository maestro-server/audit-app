[  {    "type": "post",    "url": "/api/:entity",    "title": "c. Create record",    "name": "CreateAudit",    "group": "Audit",    "parameter": {      "fields": {        "Body x-www": [          {            "group": "Body x-www",            "type": "String",            "optional": true,            "field": "entity_id",            "description": "<p>Entity ID</p>"          },          {            "group": "Body x-www",            "type": "String",            "optional": true,            "field": "roles",            "description": "<p>Current roles</p>"          },          {            "group": "Body x-www",            "type": "String",            "optional": false,            "field": "field",            "description": "<p>All fields</p>"          }        ],        "Param": [          {            "group": "Param",            "type": "String",            "optional": false,            "field": "entity",            "description": "<p>Entity type {applications, servers, systems, clients, networks and etc}.</p>"          }        ]      }    },    "permission": [      {        "name": "JWT Audit (Contract)"      }    ],    "header": {      "fields": {        "Header": [          {            "group": "Header",            "type": "String",            "optional": false,            "field": "Authorization",            "description": "<p>JWT {Token}</p>"          }        ]      }    },    "error": {      "fields": {        "Error": [          {            "group": "Error",            "optional": false,            "field": "PermissionError",            "description": "<p>Token don`t have permission</p>"          },          {            "group": "Error",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid Token</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 201 OK\n{}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/audit.js",    "groupTitle": "Audit"  },  {    "type": "get",    "url": "/api/:entity",    "title": "a. List record by entity",    "name": "GetAudit",    "group": "Audit",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "String",            "optional": true,            "field": "token",            "description": "<p>Authorization JWT {Token}</p>"          },          {            "group": "Query",            "type": "String",            "optional": false,            "field": "entity_id",            "description": "<p>Entity unique id</p>"          },          {            "group": "Query",            "type": "Object",            "optional": false,            "field": "data",            "description": "<p>Filter by field <br/> Must used with dot notation, like</p> <pre class=\"prettyprint language-json\" data-type=\"json\"> <code> \"data.hostname\": 'search by hostname' // or<br/> \"data.datacenters.providers\": 'search by providers'  </code> </pre>"          }        ],        "Param": [          {            "group": "Param",            "type": "String",            "optional": false,            "field": "entity",            "description": "<p>Entity type {applications, servers, systems, clients, networks and etc}.</p>"          }        ]      }    },    "permission": [      {        "name": "JWT (Read | Write | Admin)"      }    ],    "error": {      "fields": {        "Error": [          {            "group": "Error",            "optional": false,            "field": "PermissionError",            "description": "<p>Token don`t have permission</p>"          },          {            "group": "Error",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid Token</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[\n {\n     _id: <string>\n     entity_id: <string>\n     entity: <string>\n     created_at: <date TZ>\n     data: <object>\n          {}\n     }\n]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/audit.js",    "groupTitle": "Audit"  },  {    "type": "get",    "url": "/api/:entity/:id",    "title": "b. Show record",    "name": "GetAuditId",    "group": "Audit",    "parameter": {      "fields": {        "Query": [          {            "group": "Query",            "type": "String",            "optional": true,            "field": "token",            "description": "<p>Authorization JWT {Token}</p>"          }        ],        "Param": [          {            "group": "Param",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Entity unique id.</p>"          },          {            "group": "Param",            "type": "String",            "optional": false,            "field": "entity",            "description": "<p>Entity type {applications, servers, systems, clients, networks and etc}.</p>"          }        ]      }    },    "permission": [      {        "name": "JWT (Read | Write | Admin)"      }    ],    "error": {      "fields": {        "Error": [          {            "group": "Error",            "optional": false,            "field": "PermissionError",            "description": "<p>Token don`t have permission</p>"          },          {            "group": "Error",            "optional": false,            "field": "Unauthorized",            "description": "<p>Invalid Token</p>"          }        ]      }    },    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n[\n {\n     _id: <string>\n     entity_id: <string>\n     entity: <string>\n     created_at: <date TZ>\n     data: <object>\n          {}\n     }\n]",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/audit.js",    "groupTitle": "Audit"  },  {    "type": "get",    "url": "/",    "title": "Ping",    "name": "GetPing",    "group": "Ping",    "success": {      "examples": [        {          "title": "Success-Response:",          "content": "HTTP/1.1 200 OK\n{\n   app: (String),\n   description: (String),\n   version: (Float),\n   api_timeout: (Number)\n}",          "type": "json"        }      ]    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/audit.js",    "groupTitle": "Ping"  },  {    "type": "post",    "url": "/teams/:id/audit/:entity",    "title": "ac. Create record",    "name": "CreateTeamApi",    "group": "Teams",    "description": "<p>Use for teams scope, have be all actions, params and option in /audit/:entity,</p>",    "parameter": {      "fields": {        "Param": [          {            "group": "Param",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Team unique ID.</p>"          },          {            "group": "Param",            "type": "String",            "optional": false,            "field": "entity",            "description": "<p>Entity type {applications, servers, systems, clients, networks and etc}.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/index.js",    "groupTitle": "Teams"  },  {    "type": "get",    "url": "/teams/:id/audit/:entity",    "title": "aa. List record by entity",    "name": "GetTeamApi",    "group": "Teams",    "description": "<p>Use for teams scope, have be all actions, params and option in /audit/:entity,</p>",    "parameter": {      "fields": {        "Param": [          {            "group": "Param",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Team unique ID.</p>"          },          {            "group": "Param",            "type": "String",            "optional": false,            "field": "entity",            "description": "<p>Entity type {applications, servers, systems, clients, networks and etc}.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/index.js",    "groupTitle": "Teams"  },  {    "type": "get",    "url": "/teams/:id/audit/:entity",    "title": "ab. Show record",    "name": "GetTeamApiID",    "group": "Teams",    "description": "<p>Use for teams scope, have be all actions, params and option in /audit/:entity/:id,</p>",    "parameter": {      "fields": {        "Param": [          {            "group": "Param",            "type": "String",            "optional": false,            "field": "id",            "description": "<p>Team unique ID.</p>"          },          {            "group": "Param",            "type": "String",            "optional": false,            "field": "idu",            "description": "<p>Entity unique ID.</p>"          },          {            "group": "Param",            "type": "String",            "optional": false,            "field": "entity",            "description": "<p>Entity type {applications, servers, systems, clients, networks and etc}.</p>"          }        ]      }    },    "version": "0.0.0",    "filename": "app/audit/routers/audit/index.js",    "groupTitle": "Teams"  }]
